# For more info on HTTP files go to https://aka.ms/vs/httpfile

### get all
GET http://localhost:5001/api/Platforms
content-type: application/json
charset=utf-8 

### get 1
GET http://localhost:5001/api/Platforms/1
content-type: application/json
charset=utf-8 

### post new itam 1
POST http://localhost:5001/api/Platforms
content-type: application/json
charset=utf-8 

{
  "name": "Apache",
  "publisher": "Apache Foundation",
  "cost": "Free"
}

### test platform controlle in COmmandService
GET http://localhost:6001/api/c/Platforms
content-type: application/json
charset=utf-8 

### post new itam 2
POST http://localhost:5001/api/Platforms
content-type: application/json
charset=utf-8 

{
  "name": "Firefox",
  "publisher": "Firefox Inc",
  "cost": "Free"
}

### post new itam 2
POST http://localhost:6001/api/c/platforms/6/commands
content-type: application/json
charset=utf-8 

{
  "howto": "Push Docket to Hub",
  "commandline": "docker push <test>"
}

### test platform controlle in COmmandServicev ##api/c/platforms/{platformId}/[controller]
GET http://localhost:6001/api/c/platforms
content-type: application/json
charset=utf-8 


### put itam
PUT http://localhost:8086/api/Platform
content-type: application/json
charset=utf-8 

{
  "id": 4,
  "name": "RabbitMQ Server",
  "publisher": "Rabbit Inc",
  "cost": "Free"
}

### la porta 31620 è definita dal Service di Kubernetes
### per trovare la porta: kubectl get services
### get platfor from k8s
GET http://localhost:31620/api/Platform
content-type: application/json
charset=utf-8 

### get 1
GET http://localhost:31620/api/Platform/1
content-type: application/json
charset=utf-8

### post to k8s enviroments
POST http://localhost:31620/api/Platform
content-type: application/json
charset=utf-8 

{
  "name": "Apache",
  "publisher": "Apache Foundation",
  "cost": "Free"
}

### post to command services
POST http://localhost:6001/api/c/Platforms
content-type: application/json
charset=utf-8
{
}

### test platform controlle in COmmandService
GET http://localhost:6001/api/c/Platforms
content-type: application/json
charset=utf-8 

### test metodo GetCommandForPlatform del CommandController con platformId
GET http://localhost:6001/api/c/platforms/1/Commands
content-type: application/json
charset=utf-8 


### test metodo GetCommandForPlatform del CommandController con platformId e commandId
GET http://localhost:6001/api/c/platforms/1/Commands/2
content-type: application/json
charset=utf-8


### test metodo CreateCommand del CommandController con platformId 1
POST http://localhost:6001/api/c/platforms/1/Commands
content-type: application/json
charset=utf-8 

{
  "HowTo": "Build a dotnet project",
  "CommandLine": "dotnet build"
}

### usando K8s come load balancer
GET http://acme.com/api/platforms
content-type: application/json
charset=utf-8 


### usando K8s come load balancer
GET http://acme.com/api/platforms/2
content-type: application/json
charset=utf-8 


### post to k8s enviroments
POST http://acme.com/api/platforms
content-type: application/json
charset=utf-8 

{
  "name": "Apache",
  "publisher": "Apache Foundation",
  "cost": "Free"
}

### post to k8s enviroments
POST http://acme.com/api/c/platforms
content-type: application/json
charset=utf-8 

### usando K8s come load balancer
GET http://acme.com/api/commands
content-type: application/json
charset=utf-8 